########################################################################################################################
# task_1
########################################################################################################################


def McCulloch_Pitts_AND():
    print('Введите веса (and)')
    w1 = float(input('Вес w1 = '))
    w2 = float(input('Вес w2 = '))
    print('Введите величину порога')
    theta = float(input('Порог = '))

    y = [0, 0, 0, 0]
    x1 = [1, 1, 0, 0]
    x2 = [1, 0, 1, 0]
    z = [1, 0, 0, 0]
    flag = 1

    while flag:
        zin = [(x1[i] * w1 + x2[i] * w2) / 2 for i in range(4)]
        for i in range(4):
            if zin[i] > theta:
                y[i] = 1
            else:
                y[i] = 0

        print('Значения на выходах и входах')
        print('X1 - ', x1)
        print('X2 - ', x2)
        print('Y  - ', y)

        if y == z:
            flag = 0
        else:
            print('Нейрон не обучен. Введите другие значения весовых коэффициентов и порога')
            w1 = float(input('Вес w1 = '))
            w2 = float(input('Вес w2 = '))
            theta = float(input('Порог = '))

    print('Нейрон МакКаллока-Питса для функции "И" (англ. "AND")')
    print('Веса нейрона')
    print(w1)
    print(w2)
    print('Пороговое значение')
    print(theta)


McCulloch_Pitts_AND()
########################################################################################################################
# task_2
########################################################################################################################


def McCulloch_Pitts_OR():
    print('Введите веса (or)')
    w1 = float(input('Вес w1 = '))
    w2 = float(input('Вес w2 = '))
    print('Введите величину порога')
    theta = float(input('Порог = '))

    y = [0, 0, 0, 0]
    x1 = [1, 1, 0, 0]
    x2 = [1, 0, 1, 0]
    z = [1, 1, 1, 0]
    flag = 1

    while flag:
        zin = [(x1[i] * w1 + x2[i] * w2) / 2 for i in range(4)]
        for i in range(4):
            if zin[i] >= theta:
                y[i] = 1
            else:
                y[i] = 0

        print('Значения на выходах и входах')
        print('X1 - ', x1)
        print('X2 - ', x2)
        print('Y  - ', y)

        if y == z:
            flag = 0
        else:
            print('Нейрон не обучен. Введите другие значения весовых коэффициентов и порога')
            w1 = float(input('Вес w1 = '))
            w2 = float(input('Вес w2 = '))
            theta = float(input('Порог = '))

    print('Нейрон МакКаллока-Питса для функции "ИЛИ" (англ. "OR")')
    print('Веса нейрона')
    print(w1)
    print(w2)
    print('Пороговое значение')
    print(theta)


McCulloch_Pitts_OR()
########################################################################################################################
# task_3
########################################################################################################################


def McCulloch_Pitts_AND_bipolar():
    print('Введите веса')
    w1 = float(input('Вес w1 = '))
    w2 = float(input('Вес w2 = '))
    print('Введите величину порога')
    theta = float(input('Порог = '))

    y = [0, 0, 0, 0]
    x1 = [-1, 1, -1, 1]
    x2 = [1, -1, -1, 1]
    z = [-1, -1, -1, 1]

    flag = 1
    while flag:
        zin = [x1[i] * w1 + x2[i] * w2 for i in range(4)]

        for i in range(4):
            if zin[i] <= theta:
                y[i] = -1
            else:
                y[i] = 1

        print('Значения на выходах и входах')
        print('X1 - ', x1)
        print('X2 - ', x2)
        print('Y  - ', y)

        if y == z:
            flag = 0
        else:
            print('Нейрон не обучен. Введите другие значения весовых коэффициентов и порога')
            w1 = float(input('Вес w1 = '))
            w2 = float(input('Вес w2 = '))
            theta = float(input('Порог = '))

    print('Нейрон МакКаллока-Питса для функции "биполярное И"')
    print('Веса нейрона')
    print(w1)
    print(w2)
    print('Пороговое значение')
    print(theta)


McCulloch_Pitts_AND_bipolar()
########################################################################################################################
# task_4
########################################################################################################################


def McCulloch_Pitts(x1, x2, w1, w2, theta):
    y = -1
    zin = x1 * w1 + x2 * w2

    if zin >= theta:
        y = 1
    else:
        y = 0

    print('Значение на выходе нейрона', y)
    return y


def McCulloch_Pitts_XOR():
    w1 = [1, -1, 1]
    w2 = [-1, 1, 1]
    theta = 1

    y1 = [0, 0, 0, 0]
    y2 = [0, 0, 0, 0]
    y = [0, 0, 0, 0]
    x1 = [0, 1, 0, 1]
    x2 = [0, 0, 1, 1]
    z = [0, 1, 1, 0]

    for i in range(4):
        y1[i] = McCulloch_Pitts(x1[i], x2[i], w1[0], w2[0], theta)
        y2[i] = McCulloch_Pitts(x1[i], x2[i], w1[1], w2[1], theta)
        y[i] = McCulloch_Pitts(y1[i], y2[i], w1[2], w2[2], theta)

    if y != z:
        print('ERROR: Введите другие значения весовых коэффициентов и порога', y)
        print('Y  - ', y)

    print('Значения на выходах и входах')
    print('X1 - ', x1)
    print('X2 - ', x2)
    print('Y  - ', y)
    print('Нейрон МакКаллока-Питса для функции «Исключающее ИЛИ» (англ. XOR)', y)
    print('Веса нейрона')
    print(w1)
    print(w2)
    print('Пороговое значение')
    print(theta)


McCulloch_Pitts_XOR()
########################################################################################################################